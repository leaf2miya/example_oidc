version: "3"
services:
  kc:
    image: jboss/keycloak
    container_name: keycloak_provider
    networks:
      - keycloak
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    environment:
      - KEYCLOAK_LOGLEVEL=DEBUG
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=password
      - DB_USER=keycloak
      - DB_PASSWORD=password
      - DB_ADDR=postgres

  sp:
    build:
      context: ./docker/rp
      args:
        - http_proxy=$http_proxy
        - https_proxy=$https_proxy
    container_name: keycloak_sp
    networks:
      - keycloak
    ports:
      - "8081:80"
    volumes:
      - ./srv/rp/auth_openidc.conf:/etc/apache2/mods-available/auth_openidc.conf

  sp2:
    build:
      context: ./docker/rp_portal
      args:
        - http_proxy=$http_proxy
        - https_proxy=$https_proxy
    container_name: keycloak_sp2
    networks:
      - keycloak
    ports:
      - "8082:3000"
    command: bundle exec ruby sinatra.rb
    env_file:
      - keycloak_rp.env

  sp3:
    build:
      context: ./docker/rp_backend
      args:
        - http_proxy=$http_proxy
        - https_proxy=$https_proxy
    container_name: keycloak_sp3
    networks:
      - keycloak
    ports:
      - "8083:3000"
    command: bundle exec ruby sinatra.rb
    env_file:
      - keycloak_backend.env

  postgres:
    image: postgres
    networks:
      - keycloak
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  keycloak:
    driver: bridge

volumes:
  postgres-data:
